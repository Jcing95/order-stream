[package]
name = "order-stream"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos = { version = "0.8.2", features = ["nightly"] }
leptos_router = { version = "0.8.2", features = ["nightly"] }
console_error_panic_hook = "0.1.7"
leptos_meta = { version = "0.8.2" }
wasm-bindgen = "0.2.100"
thiserror = "2.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
validator = { version = "0.20.0", features = ["derive"] }

axum = { version = "0.8.4", features = ["ws"], optional = true }
leptos_axum = { version = "0.8.2", optional = true }
tokio = { version = "1.45", features = [
  "rt-multi-thread",
  "macros",
], optional = true }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.6", features = ["fs"], optional = true }
surrealdb = { version = "2.3.4", optional = true }
dotenvy = { version = "0.15.7", optional = true }
web-sys = { version = "0.3.77", features = [
  "Window",
  "Document",
  "Storage",
  "MediaQueryList",
] }
tower-sessions = { version = "0.14.0", optional = true }
argon2 = { version = "0.5.3", optional = true }
async-trait = { version = "0.1.88", optional = true }
time = { version = "0.3", optional = true }
leptos-use = { version = "0.16.2", optional = true }
tokio-tungstenite = { version = "0.27.0", optional = true }
futures-util = { version = "0.3.31", optional = true }

[features]
hydrate = ["leptos/hydrate", "dep:leptos-use"]
ssr = [
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "dep:axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:leptos_axum",
  "dep:surrealdb",
  "dep:dotenvy",
  "dep:tower-sessions",
  "dep:argon2",
  "dep:async-trait",
  "dep:time",
  "dep:tokio-tungstenite",
  "dep:futures-util",
]
tokio-tungstenite = ["dep:tokio-tungstenite"]
futures-util = ["dep:futures-util"]

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"], []]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "order-stream"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# The tailwind input file.
#
# Optional, Activates the tailwind build
tailwind-input-file = "input.css"

# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

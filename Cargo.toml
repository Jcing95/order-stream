[package]
name = "order-stream"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# --- Core Leptos Dependencies ---
# Set default-features = false to manually control 'ssr' and 'hydrate' features.
leptos = { version = "0.8.2", features = ["nightly"] }
leptos_router = { version = "0.8.2", features = ["nightly"] }
leptos_meta = { version = "0.8.2" }
leptos-use = { version = "0.16.2" }

# --- Client-Side (WASM) Dependencies ---
# These are only needed for the 'hydrate' feature.
console_error_panic_hook = { version = "0.1.7", optional = true }
wasm-bindgen = { version = "0.2.100", optional = true }
web-sys = { version = "0.3.77", features = [
  "Window",
  "Document",
  "Storage",
  "MediaQueryList",
] }

# --- Server-Side (Binary) Dependencies ---
# These are correctly marked as optional and will be enabled by the 'ssr' feature.
axum = { version = "0.8.4", features = ["ws"], optional = true }
leptos_axum = { version = "0.8.2", optional = true }
tokio = { version = "1.45", features = ["rt-multi-thread", "macros"], optional = true }
tower = { version = "0.5.2", optional = true }
tower-http = { version = "0.6.6", features = ["fs"], optional = true }
surrealdb = { version = "2.3.4", optional = true }
dotenvy = { version = "0.15.7", optional = true }
tower-sessions = { version = "0.14.0", optional = true }
argon2 = { version = "0.5.3", optional = true }
async-trait = { version = "0.1.88", optional = true }
time = { version = "0.3", optional = true }
tokio-tungstenite = { version = "0.27.0", optional = true }
futures-util = { version = "0.3.31", optional = true }

# --- Common Dependencies ---
thiserror = "2.0"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
validator = { version = "0.20.0", features = ["derive"] }


[features]
# --- Hydrate Feature: For client-side WASM compilation ---
hydrate = [
    "leptos/hydrate",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
]

# --- SSR Feature: For server-side binary compilation ---
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "dep:surrealdb",
    "dep:dotenvy",
    "dep:tower-sessions",
    "dep:argon2",
    "dep:async-trait",
    "dep:time",
    "dep:tokio-tungstenite",
    "dep:futures-util",
]

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"], []]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle.
output-name = "order-stream"
# The site root folder is where cargo-leptos generates all output.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
site-pkg-dir = "pkg"
# The tailwind input file.
tailwind-input-file = "input.css"
# Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port where the server serves the content.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# Command to use when running end2end tests.
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
# The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Controls whether autoreload JS is included in the head
watch = false

# --- IMPORTANT PRODUCTION CHANGE ---
# Set the environment to "PROD" to disable devtools and other development-only features.
env = "PROD"

# The features to use when compiling the bin target
bin-features = ["ssr"]
# If the --no-default-features flag should be used when compiling the bin target
bin-default-features = false

# The features to use when compiling the lib target
lib-features = ["hydrate"]
# If the --no-default-features flag should be used when compiling the lib target
lib-default-features = false

# --- PRODUCTION BUILD OPTIMIZATIONS ---
# These settings tell the Rust compiler to optimize for a small and fast binary.
[profile.release]
opt-level = 'z'     # Optimize for size.
lto = "fat"         # Enable Link Time Optimization.
codegen-units = 1   # Reduce parallel code generation units for better optimization.
strip = true        # Strip debug symbols from the binary.
panic = "abort"     # Abort on panic for a smaller binary.
